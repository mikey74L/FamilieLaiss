@using FamilieLaissFrontend.Client.ViewModels.Controls.VideoControl
@using FamilieLaissInterfaces.Models.Data
@using FamilieLaissResources.Resources.Controls.VideoControl
@using FamilieLaissSharedUI.Components

@inherits FlComponentBase<VideoControlHeaderViewModel>

<MudCardHeader>
    <CardHeaderContent>
        <!-- Print title -->
        @if (ShowSkeleton)
        {
            <MudGrid Spacing="1">
                <MudItem xs="11">
                    <MudSkeleton SkeletonType="SkeletonType.Text" Width="60%" />
                </MudItem>
                <MudItem xs="1">
                    <MudSkeleton SkeletonType="SkeletonType.Circle" />
                </MudItem>
            </MudGrid>
        }
        else
        {
            <MudTooltip Arrow="true" Placement="Placement.Top" RootStyle="width: 100%" Text="@UploadItem?.Filename">
                <MudText Typo="Typo.h6" Class="fl-card-video-header-text">@UploadItem?.Filename</MudText>
            </MudTooltip>
        }
    </CardHeaderContent>

    <CardHeaderActions>
        @if (ShowSelectionMode)
        {
            <MudToggleIconButton Toggled="UploadItem!.IsSelected"
                                 ToggledChanged="ViewModel.ToggledChanged"
                                 Class="@ClassAttributeToggleButton"
                                 Icon="@Icons.Material.Filled.ToggleOff"
                                 Color="Color.Error"
                                 Title="@VideoControlHeaderRes.TooltipNotSelected"
                                 ToggledIcon="@Icons.Material.Filled.ToggleOn"
                                 ToggledColor="Color.Success"
                                 ToggledTitle="@VideoControlHeaderRes.TooltipSelected" />
        }
    </CardHeaderActions>
</MudCardHeader>

@code
{
    [Parameter]
    [EditorRequired]
    public bool ShowSkeleton { get; set; }

    [Parameter]
    [EditorRequired]
    public bool ShowSelectionMode { get; set; }

    [Parameter]
    public IUploadVideoModel? UploadItem 
    { 
        get
        {
            return ViewModel.UploadItem;
        }
        set
        {
            ViewModel.UploadItem = value;
        }
    }

    [Parameter]
    public EventCallback ToggleChanged 
    { 
        get
        {
            return ViewModel.ToggleChanged;
        }
        set
        {
            ViewModel.ToggleChanged = value;
        }
    }

    private string ClassAttributeToggleButton
    {
        get
        {
            string result = "fl-card-video-toggle-button ";

            if (UploadItem?.IsSelected ?? false)
            {
                result += "fl-card-video-toggle-button-selected ";
            }

            return result;
        }
    }
}